package FieldsInXML.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAvailableFields = createDescriptorForAvailableFields();
  /*package*/ final ConceptDescriptor myConceptField = createDescriptorForField();
  /*package*/ final ConceptDescriptor myConceptTableColumn = createDescriptorForTableColumn();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAvailableFields, myConceptField, myConceptTableColumn);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.AvailableFields:
        return myConceptAvailableFields;
      case LanguageConceptSwitch.Field:
        return myConceptField;
      case LanguageConceptSwitch.TableColumn:
        return myConceptTableColumn;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForAvailableFields() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FieldsInXML", "AvailableFields", 0x8b4ff03b42b94888L, 0xa81e703bddc7697eL, 0x55057c6570173918L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:413663fe-496c-43e4-87e1-97a30338a031(FieldsInXML.structure)/6126439643221539096");
    b.aggregate("fields", 0x55057c657017391eL).target(0x8b4ff03b42b94888L, 0xa81e703bddc7697eL, 0x55057c6570173919L).optional(true).ordered(true).multiple(true).origin("6126439643221539102").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FieldsInXML", "Field", 0x8b4ff03b42b94888L, 0xa81e703bddc7697eL, 0x55057c6570173919L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:413663fe-496c-43e4-87e1-97a30338a031(FieldsInXML.structure)/6126439643221539097");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTableColumn() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FieldsInXML", "TableColumn", 0x8b4ff03b42b94888L, 0xa81e703bddc7697eL, 0x55057c6570163db2L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.core.xml.structure.XmlContent", 0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c549486bL);
    b.origin("r:413663fe-496c-43e4-87e1-97a30338a031(FieldsInXML.structure)/6126439643221474738");
    b.associate("field", 0x55057c65701739a5L).target(0x8b4ff03b42b94888L, 0xa81e703bddc7697eL, 0x55057c6570173919L).optional(false).origin("6126439643221539237").done();
    b.alias("{{");
    return b.create();
  }
}
